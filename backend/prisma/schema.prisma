generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String      @id @default(uuid())
  name       String
  email      String
  password   String
  created_at DateTime?   @default(now())
  update_at  DateTime?   @default(now())
  function   String?
  favorites  Favorites[]

  @@map("users")
}

model Category {
  id         String    @id @default(uuid())
  name       String
  created_at DateTime? @default(now())
  update_at  DateTime? @default(now())
  products   Product[]

  @@map("categories")
}

model Product {
  id          String        @id @default(uuid())
  name        String
  price       String
  description String
  banner      String
  created_at  DateTime?     @default(now())
  update_at   DateTime?     @default(now())
  category_id String
  favorites   Favorites[]
  ingredients Ingredients[]
  items       Item[]
  category    Category      @relation(fields: [category_id], references: [id])

  @@map("products")
}

model Order {
  id          String    @id @default(uuid())
  table       Int
  status      Boolean   @default(false)
  draft       Boolean   @default(true)
  name        String?
  created_at  DateTime? @default(now())
  update_at   DateTime? @default(now())
  observation String
  items       Item[]

  @@map("orders")
}

model Item {
  id         String    @id @default(uuid())
  amount     Int
  created_at DateTime? @default(now())
  update_at  DateTime? @default(now())
  order_id   String
  product_id String
  order      Order     @relation(fields: [order_id], references: [id])
  product    Product   @relation(fields: [product_id], references: [id])

  @@map("items")
}

model Favorites {
  id         String    @id @default(uuid())
  created_at DateTime? @default(now())
  update_at  DateTime? @default(now())
  product_id String
  users_id   String
  product    Product   @relation(fields: [product_id], references: [id])
  users      User      @relation(fields: [users_id], references: [id])

  @@map("favorites")
}

model Ingredients {
  id         String    @id @default(uuid())
  name       String
  amount     Int
  created_at DateTime? @default(now())
  update_at  DateTime? @default(now())
  product_id String
  product    Product   @relation(fields: [product_id], references: [id])

  @@map("ingredients")
}
